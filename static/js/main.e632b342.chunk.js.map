{"version":3,"sources":["components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Cards/Cards.module.scss","App.module.scss","components/Chart/Chart.module.scss","components/CountryPicker/CountryPicker.module.scss","images/stay-home.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","renderCards","typesOfData","objectWithData","key","push","name","map","type","index","style","classes","Grid","item","component","Card","xs","md","className","cx","card","CardContent","Typography","color","gutterBottom","charAt","toUpperCase","substring","variant","start","end","value","duration","separator","Date","toDateString","container","spacing","justify","url","fetchData","country","a","changeableUrl","Axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountriesData","countries","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fecthApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.e632b342.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Cards.module.scss\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  const renderCards = () => {\n    let typesOfData = [];\n    const objectWithData = { confirmed, recovered, deaths };\n    for (const key in objectWithData) {\n      if (typeof objectWithData[key] === \"object\") {\n        typesOfData.push({ name: key, ...objectWithData[key], lastUpdate });\n      }\n    }\n\n    return typesOfData.map((type, index) => {\n      const style = classes[type.name]; // вынес в переменную, чтобы потом использовать в cx\n      return (\n        <Grid\n          key={index}\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(classes.card, style)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {type.name.charAt(0).toUpperCase() + type.name.substring(1)}\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={type.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(type.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              {type.name === \"confirmed\"\n                ? \"Number of active cases of COVID-19\"\n                : null}\n              {type.name === \"recovered\"\n                ? \"Number of recoveries from COVID-19\"\n                : null}\n              {type.name === \"deaths\"\n                ? \"Number of deaths caused by COVID-19\"\n                : null}\n            </Typography>\n          </CardContent>\n        </Grid>\n      );\n    });\n  };\n\n  renderCards();\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {renderCards()}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import Axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await Axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await Axios.get(`${url}/daily`);\n\n    // прошлись по массиву и с помощью map() вернули новый массив с нужными полями\n    const modifiedData = data.map((dailyData) => {\n      return {\n        confirmed: dailyData.confirmed.total,\n        deaths: dailyData.deaths.total,\n        date: dailyData.reportDate,\n      };\n    });\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountriesData = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await Axios.get(`${url}/countries`);\n    const modifiedData = countries.map((country) => {\n      return {\n        name: country.name,\n      };\n    });\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { fetchDailyData } from \"../../api/index\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport classes from \"./Chart.module.scss\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date), // расположение даты по оси Х\n        // построение графиков за счет приходящих данных\n        datasets: [\n          {\n            label: \"Infected\", // название\n            data: dailyData.map(({ confirmed }) => confirmed), // выборка по ключу confirmed\n            borderColor: \"#3333ff\", // цвет линий\n            fill: true,\n          },\n          {\n            label: \"Deaths\", // название\n            data: dailyData.map(({ deaths }) => deaths), // выборка по ключу deaths\n            borderColor: \"#ff0000\", // цвет линий\n            backgroundColor: \"rgba(255,0,0, .5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"], // расположение меток по оси Х\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              // метки соответствуют этим цветам\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              // метки соответствуют этим данным\n              confirmed.value,\n              recovered.value,\n              deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state  in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={classes.container}>\n      {country === \"Global\" ? lineChart : barChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport { fetchCountriesData } from \"../../api\";\nimport classes from \"./CountryPicker.module.scss\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fecthApi = async () => {\n      setCountries(await fetchCountriesData());\n    };\n    fecthApi();\n  }, []);\n  //console.log(countries);\n\n  return (\n    <FormControl className={classes.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"Global\">Global</option>\n        {countries.map((country, index) => {\n          return (\n            <option key={index} value={country.name}>\n              {country.name}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.scss\";\nimport { Cards, Chart, CountryPicker } from \"./components/imports.js\";\nimport { fetchData } from \"./api/index.js\";\nimport coronaImage from \"./images/stay-home.png\";\n\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData, country: \"Global\" });\n  }\n\n  handleCountryChange = async (country) => {\n    if (country === \"Global\") {\n      const fetchedData = await fetchData();\n      this.setState({ data: fetchedData, country: country });\n    } else {\n      const fetchedData = await fetchData(country);\n      this.setState({ data: fetchedData, country: country });\n    }\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <img className={classes.image} src={coronaImage} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1t5KM\",\"card\":\"Cards_card__1mPNX\",\"confirmed\":\"Cards_confirmed__SMQrb\",\"recovered\":\"Cards_recovered__2AONk\",\"deaths\":\"Cards_deaths__1RPyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"image\":\"App_image__idSIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3SDj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__VD6N8\"};","module.exports = __webpack_public_path__ + \"static/media/stay-home.a1e3ebeb.png\";"],"sourceRoot":""}